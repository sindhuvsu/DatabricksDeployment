name: Deploy Notebooks to Databricks PROD

on:
  push:
    branches:
      - main  # Modify this to your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@main

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Use the appropriate Python version
    - name: check files
      run: |
        ls
    - name: cd and check files
      run: |
        cd notebooks/Shared
        ls
    - name: Set up Databricks CLI for PROD notebook1
      run: |
        # Configure the Databricks REST API URL for your PROD workspace
        PROD_API_URL="$DATABRICKS_HOST_PROD/api/2.0/workspace/import"
        
        curl --location "$PROD_API_URL?language=PYTHON&overwrite=true" \
          --header "Authorization: Bearer $DATABRICKS_TOKEN_PROD" \
          --form "content=@$NOTEBOOK_NAME" \
          --form "path=/Shared/$NOTEBOOK_NAME" \
          --form "format=AUTO" \
          --form "overwrite=true" -v
      env:
        DATABRICKS_TOKEN_PROD: ${{ secrets.PROD_DATABRICKS_TOKEN }}
        DATABRICKS_HOST_PROD: ${{ secrets.PROD_DATABRICKS_HOST }}
        NOTEBOOK_NAME: DQ

    - name: Set up Databricks CLI for PROD notebook2
      run: |
        # Configure the Databricks REST API URL for your PROD workspace
        PROD_API_URL="$DATABRICKS_HOST_PROD/api/2.0/workspace/import"
        
        curl --location "$PROD_API_URL?language=PYTHON&overwrite=true" \
          --header "Authorization: Bearer $DATABRICKS_TOKEN_PROD" \
          --form "content=@$NOTEBOOK_NAME" \
          --form "path=/Shared/$NOTEBOOK_NAME" \
          --form "format=AUTO" \
          --form "overwrite=true" -v
      env:
        DATABRICKS_TOKEN_PROD: ${{ secrets.PROD_DATABRICKS_TOKEN }}
        DATABRICKS_HOST_PROD: ${{ secrets.PROD_DATABRICKS_HOST }}
        NOTEBOOK_NAME: DQ_AAA
    # - name: Clean up
    #   run: |
    #     rm test_folder  # Remove temporary export directory
